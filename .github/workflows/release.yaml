name: Flutter Desktop Deployment

on:
  push:
    branches:
      - main

jobs:
  # linux:
  #   runs-on: ubuntu-latest

  #   permissions:
  #     contents: write

  #   env:
  #     VERSION: v${{ github.run_number }}-linux-$(date +'%Y%m%d%H%M%S')

  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: subosito/flutter-action@v1
  #       with:
  #         channel: 'stable'
  #     - name: Install os dependencies
  #       run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
  #     - name: Install project dependencies
  #       run: flutter pub get
  #     - name: Generate intermediates
  #       run: flutter pub run build_runner build --delete-conflicting-outputs
  #     - name: Enable linux build
  #       run: flutter config --enable-linux-desktop
  #     - name: Build artifacts
  #       run: flutter build linux --release
  #     - name: Package Release files
  #       uses: thedoctor0/zip-release@master
  #       with:
  #         type: 'zip'
  #         filename: local_api_server-${{ env.VERSION }}.zip
  #         directory: build/linux/x64/release/bundle
  #     - name: Create New Tag
  #       run: |
  #         git config --global user.email "thisisamank@gmail.com"
  #         git config --global user.name "Aman Kumar"
  #         git tag -a ${{ env.VERSION }} -m "Release ${{ env.VERSION }}"
  #         git push origin ${{ env.VERSION }}
  #     - name: Release to github
  #       uses: softprops/action-gh-release@v2
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ env.VERSION }}
  #         files: build/linux/x64/release/bundle/local_api_server-${{ env.VERSION }}.zip

  windows:
    runs-on: windows-latest

    permissions:
      contents: write

    env:
      VERSION: v${{ github.run_number }}-windows-$(date +"%Y%m%d%H%M%S")

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Install OS Dependencies
        run: |
          choco install cmake -y
          choco install ninja -y
          choco install visualstudio2019buildtools -y
      - name: Install project dependencies
        run: flutter pub get
      - name: Generate intermediates
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Enable windows build
        run: flutter config --enable-windows-desktop
      - name: Build artifacts
        run: flutter build windows --release
      - name: Package Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: FretMaster-${{ env.VERSION }}.zip
          directory: build/windows/x64/runner/Release
      - name: Create New Tag
        run: |
          git config --global user.email "thisisamank@gmail.com"
          git config --global user.name "Aman Kumar"
          git tag -a ${{ env.VERSION }} -m "Release ${{ env.VERSION }}"
          git push origin ${{ env.VERSION }}
      - name: Release to GitHub
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          files: build/windows/x64/runner/Release/FretMaster-${{ env.VERSION }}.zip

  macos:
    runs-on: macos-latest

    permissions:
      contents: write

    env:
      VERSION: v${{ github.run_number }}-macos-$(date +"%Y%m%d%H%M%S")

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Install project dependencies
        run: flutter pub get
      - name: Generate intermediates
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Enable macOS build
        run: flutter config --enable-macos-desktop
      - name: Build artifacts
        run: flutter build macos --release
      - name: Package Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: FretMaster-${{ env.VERSION }}.zip
          directory: build/macos/Build/Products/Release
      - name: Create New Tag
        run: |
          git config --global user.email "thisisamank@gmail.com"
          git config --global user.name "Aman Kumar"
          git tag -a ${{ env.VERSION }} -m "Release ${{ env.VERSION }}"
          git push origin ${{ env.VERSION }}
      - name: Release to GitHub
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          files: build/macos/Build/Products/Release/FretMaster-${{ env.VERSION }}.zip